# auto-add grouper loader types and attributes when grouper starts up if they are not there
loader.autoadd.typesAttributes = false

# if a transaction should be used when loading groups.  If not, then
# commits will happen as the group is loaded (and memory usage might be
# less intensive, and caching settings need to be set right)
loader.use.transactions = false

# number of threads in the loader threadpool.  Only this number of jobs can run at once
# jobs which are on deck will block, or will fail if the blocking timeout occurs
# a job is running if it is loading (not just scheduled)
loader.thread.pool.size=10

# number of days to retain db logs in table grouperloader_log.  -1 is forever.  default is 7
loader.retain.db.logs.days=7

# if you want queries which do not specify subject source to come from a certain
# source, specify here (improves performance so it doesnt search through all sources)
default.subject.source.id = 

#if using a sql table, and specifying the name like string, then should the group (in addition to memberships)
# be removed if not used anywhere else?
loader.sqlTable.likeString.removeGroupIfNotUsed = true

#################################
## DB connections
#################################
# specify the db connection with user, pass, url, and driver class
# the string after "db." is the name of the connection, and it should not have
# spaces or other special chars in it
#db.warehouse.user = mylogin
#note the password can be stored encrypted in an external file
#db.warehouse.pass = secret
#db.warehouse.url = jdbc:mysql://localhost:3306/grouper
#db.warehouse.driver = com.mysql.jdbc.Driver

##################################
## Daily report
##################################
#quartz cron-like schedule for daily grouper report, the default is 7am every day: 0 0 7 * * ? 
#leave blank to disable this
daily.report.quartz.cron = 0 0 7 * * ? 

#comma separated email addresses to email the daily report, e.g. a@b.c, b@c.d
daily.report.emailTo = nathan.kopp@ccci.org

#days on which usdu should run with daily report (comma separated)
#blank means run never.   e.g. to run on all days: monday, tuesday, wednesday, thursday, friday, saturday, sunday
daily.report.usdu.daysToRun = monday, tuesday, wednesday, thursday, friday, saturday, sunday

#days on which bad membership finder should run with daily report (comma separated)
#blank means run never.   e.g. to run on all days: monday, tuesday, wednesday, thursday, friday, saturday, sunday
daily.report.badMembership.daysToRun = monday, tuesday, wednesday, thursday, friday, saturday, sunday

#days on which to sync flat tables with daily report (comma separated)
#blank means run never.   e.g. to run on all days: monday, tuesday, wednesday, thursday, friday, saturday, sunday
daily.report.syncFlatTables.daysToRun = monday, tuesday, wednesday, thursday, friday, saturday, sunday

#Whether or not notifications should be sent out for changes made to the flat tables.
daily.report.syncFlatTables.sendNotifications = true

#Whether issues in the flat tables should be fixed or just reported.
daily.report.syncFlatTables.saveUpdates = true

#if you put a directory here, the daily reports will be saved there, and you can
#link up to a web service or store them or whatever.  e.g. /home/grouper/reports/
daily.report.saveInDirectory =

##################################
## enabled / disabled cron
##################################

#quartz cron-like schedule for enabled/disabled daemon
#leave blank to disable this, the default is 12:01am, 11:01am, 3:01pm every day: 0 1 0,11,15 * * ? 
changeLog.enabledDisabled.quartz.cron = 0 1 0,13,18 * * ?

#fire every minute
#changeLog.enabledDisabled.quartz.cron = 0 * * * * ?

##################################
## Change log
##################################

# should the change log temp to change log daemon run?
changeLog.changeLogTempToChangeLog.enable = true

#quartz cron-like schedule for change log temp to change log daemon, the default is 50 seconds after every minute: 50 * * * * ?
#leave blank to disable this
changeLog.changeLogTempToChangeLog.quartz.cron = 

# Should the change log include non-flattened (immediate and composite only) memberships?  If false, it will only include flattened memberships.
changeLog.includeNonFlattenedMemberships = false

# Should the change log include non-flattened (immediate only) privileges?  If false, it will only include flattened privileges.
changeLog.includeNonFlattenedPrivileges = false

#specify the consumers here.  specify the consumer name after the changeLog.consumer. part.  This example is "ldappc"
#but it could be changeLog.consumer.myConsumerName.class
#the class must extend edu.internet2.middleware.grouper.changeLog.ChangeLogConsumerBase
#changeLog.consumer.ldappc.class = 

#the quartz cron is a cron-like string.  it defaults to every minute on the minute (since the temp to change log job runs
#at 10 seconds to each minute).  it defaults to this: 0 * * * * ?
#though it will stagger each one by 2 seconds
#changeLog.consumer.ldappc.quartzCron = 

######################################################
#                    Siebel 

# =================================
# Recon - responsibilities

#customJob.siebelRespRecon.class = org.ccci.idm.groupersiebelrecon.SiebelResponsibilityReconTask
#customJob.siebelRespRecon.quartzCron = 10 * * * * ?
#customJob.siebelRespRecon.username = RCARLSON
#customJob.siebelRespRecon.password = RCARLSON
#customJob.siebelRespRecon.url = siebel.tcpip.none.none://hart_a814.ccci.org:2321/SBLCRMD/EAIObjMgr_enu

# =================================
# Recon - access groups

#customJob.siebelAccessGroupRecon.class = org.ccci.idm.groupersiebelrecon.SiebelAccessGroupReconTask
#customJob.siebelAccessGroupRecon.quartzCron = 10 * * * * ?
#customJob.siebelAccessGroupRecon.username = RCARLSON
#customJob.siebelAccessGroupRecon.password = RCARLSON
#customJob.siebelAccessGroupRecon.url = siebel.tcpip.none.none://hart_a814.ccci.org:2321/SBLCRMD/EAIObjMgr_enu


# =================================
# Provisioning

#changeLog.consumer.siebel.quartzCron = 0 * * * * ?
#changeLog.consumer.siebel.class = edu.internet2.middleware.grouper.changeLog.provisioning.ProvisioningConsumer
#changeLog.consumer.siebel.elfilter = event.eventType eq 'MEMBERSHIP_DELETE' \|\| event.eventType eq 'MEMBERSHIP_ADD'
#changeLog.consumer.siebel.connector.class = org.ccci.idm.groupersiebelpc.SiebelConnector
#changeLog.consumer.siebel.connector.username = RCARLSON
#changeLog.consumer.siebel.connector.password = RCARLSON
#changeLog.consumer.siebel.connector.url = siebel.tcpip.none.none://hart_a814.ccci.org:2321/SBLCRMD/EAIObjMgr_enu


######################################################
#                 Stellent (LDAP) 

# =================================
# Recon (Accounts only)

customJob.stellentRecon.class = org.ccci.idm.grouperstellentrecon.StellentAccountReconTask
customJob.stellentRecon.quartzCron = 0 0/15 * * * ?
customJob.stellentRecon.adminUser = ccci:itroles:uscore:stellent:stellent_admins

# =================================
# Provisioning (Roles)

changeLog.consumer.stellentroles.quartzCron = 0 * * * * ?
changeLog.consumer.stellentroles.class = edu.internet2.middleware.grouper.changeLog.provisioning.ProvisioningConsumer
changeLog.consumer.stellentroles.elfilter = event.eventType eq 'MEMBERSHIP_DELETE' \|\| event.eventType eq 'MEMBERSHIP_ADD' \|\| event.eventType eq 'GROUP_ADD' \|\| event.eventType eq 'GROUP_DELETE'
changeLog.consumer.stellentroles.connector.class = org.ccci.idm.grouperldappc.BasicEventConnector
changeLog.consumer.stellentroles.connector.systemConnectorClass = org.ccci.idm.grouperldappc.LdapConnector
changeLog.consumer.stellentroles.connector.userRdnAttribName = cn
changeLog.consumer.stellentroles.connector.userBaseDn = CN=Users,CN=idm,DC=cru,DC=org
changeLog.consumer.stellentroles.connector.groupRdnAttrib = cn
changeLog.consumer.stellentroles.connector.groupLdapClasses = group
changeLog.consumer.stellentroles.connector.grouperRoot = ccci:itroles:uscore:stellent:roles
changeLog.consumer.stellentroles.connector.flatteningPathSeparatorCharacter = -
changeLog.consumer.stellentroles.connector.flatten = true
changeLog.consumer.stellentroles.connector.computeFromDescr = true

# =================================
# Provisioning (Accounts)

changeLog.consumer.stellentaccounts.quartzCron = 0 * * * * ?
changeLog.consumer.stellentaccounts.class = edu.internet2.middleware.grouper.changeLog.provisioning.ProvisioningConsumer
changeLog.consumer.stellentaccounts.elfilter = event.eventType eq 'MEMBERSHIP_DELETE' \|\| event.eventType eq 'MEMBERSHIP_ADD' \|\| event.eventType eq 'GROUP_ADD' \|\| event.eventType eq 'GROUP_DELETE'
changeLog.consumer.stellentaccounts.connector.class = org.ccci.idm.grouperldappc.BasicEventConnector
changeLog.consumer.stellentaccounts.connector.systemConnectorClass = org.ccci.idm.grouperldappc.LdapConnector
changeLog.consumer.stellentaccounts.connector.userRdnAttribName = cn
changeLog.consumer.stellentaccounts.connector.userBaseDn = CN=Users,CN=idm,DC=cru,DC=org
changeLog.consumer.stellentaccounts.connector.groupRdnAttrib = cn
changeLog.consumer.stellentaccounts.connector.groupLdapClasses = group
changeLog.consumer.stellentaccounts.connector.grouperRoot = ccci:itroles:uscore:stellent:accounts
changeLog.consumer.stellentaccounts.connector.flatteningPathSeparatorCharacter = -
changeLog.consumer.stellentaccounts.connector.flatten = true
changeLog.consumer.stellentaccounts.connector.computeFromDescr = true


# =================================
# Delta Report (Roles)

customJob.stellentDeltaReport.class = org.ccci.idm.grouperldappc.BasicDeltaReportTask
customJob.stellentDeltaReport.systemConnectorClass = org.ccci.idm.grouperldappc.LdapConnector
customJob.stellentDeltaReport.quartzCron = 0 0 1 * * ?
customJob.stellentDeltaReport.reportName = Stellent Grouper-LDAP Roles Comparison Report
customJob.stellentDeltaReport.flatteningPathSeparatorCharacter = -
customJob.stellentDeltaReport.flatten = true
customJob.stellentDeltaReport.computeFromDescr = true
customJob.stellentDeltaReport.smtpHost = smtp1.ccci.org
customJob.stellentDeltaReport.reportRecipients = nathan.kopp@ccci.org
customJob.stellentDeltaReport.userRdnAttribName = cn
customJob.stellentDeltaReport.userBaseDn = CN=Users,CN=idm,DC=cru,DC=org
customJob.stellentDeltaReport.groupRdnAttrib = cn
customJob.stellentDeltaReport.groupLdapClass = group
customJob.stellentDeltaReport.grouperRoot = ccci:itroles:uscore:stellent:roles

# =================================
# Delta Report (Accounts)

customJob.stellentDeltaReport2.class = org.ccci.idm.grouperldappc.BasicDeltaReportTask
customJob.stellentDeltaReport2.systemConnectorClass = org.ccci.idm.grouperldappc.LdapConnector
customJob.stellentDeltaReport2.quartzCron = 0 0 1 * * ?
customJob.stellentDeltaReport2.reportName = Stellent Grouper-LDAP Accounts Comparison Report
customJob.stellentDeltaReport2.flatteningPathSeparatorCharacter = -
customJob.stellentDeltaReport2.flatten = true
customJob.stellentDeltaReport2.computeFromDescr = true
customJob.stellentDeltaReport2.smtpHost = smtp1.ccci.org
customJob.stellentDeltaReport2.reportRecipients = nathan.kopp@ccci.org
customJob.stellentDeltaReport2.userRdnAttribName = cn
customJob.stellentDeltaReport2.userBaseDn = CN=Users,CN=idm,DC=cru,DC=org
customJob.stellentDeltaReport2.groupRdnAttrib = cn
customJob.stellentDeltaReport2.groupLdapClass = group
customJob.stellentDeltaReport2.grouperRoot = ccci:itroles:uscore:stellent:accounts

# =================================
# Attestation Report (Role - StaffOnlyConsumer)

#customJob.staffWebAttestationReport.class = org.ccci.idm.grouperldappc.AttestationReportTask
#customJob.staffWebAttestationReport.quartzCron = 0 0 1 * * ?
#customJob.staffWebAttestationReport.groupId = ccci:itroles:uscore:stellent:roles:StaffOnlyConsumer
#customJob.staffWebAttestationReport.attestationUser = staffweb.rules@ccci.org
#customJob.staffWebAttestationReport.smtpHost = smtp1.ccci.org
#customJob.staffWebAttestationReport.reportRecipients = nathan.kopp@ccci.org
#customJob.staffWebAttestationReport.reportName = StaffWeb Attestation Report

#Server-Specific Options
#customJob.staffWebAttestationReport.systemId = IdM Test
#customJob.staffWebAttestationReport.reportSender = itm-test@ccci.org

######################################################
#                 Cisco (Sun LDAP) 
# NOTE: only runs in PROD

# =================================
# Provisioning

#changeLog.consumer.ciscousers.quartzCron = 0 * * * * ?
#changeLog.consumer.ciscousers.class = edu.internet2.middleware.grouper.changeLog.provisioning.ProvisioningConsumer
#changeLog.consumer.ciscousers.elfilter = event.eventType eq 'MEMBERSHIP_DELETE' \|\| event.eventType eq 'MEMBERSHIP_ADD'
#changeLog.consumer.ciscousers.connector.class = org.ccci.idm.grouperldappc.BasicEventConnector
#changeLog.consumer.ciscousers.connector.systemConnectorClass = org.ccci.idm.grouperldappc.CiscoLdapConnector
#changeLog.consumer.ciscousers.connector.userRdnAttribName = cn
#changeLog.consumer.ciscousers.connector.userBaseDn = ou=mpusers,dc=ccci,dc=org
#changeLog.consumer.ciscousers.connector.passwordAttribName = userPassword
#changeLog.consumer.ciscousers.connector.usernameAttribName = uid
#changeLog.consumer.ciscousers.connector.userLdapClasses = inetOrgPerson,organizationalPerson,Person
#changeLog.consumer.ciscousers.connector.grouperRoot = ccci:itroles:uscore:ciscoconferencing:users
#changeLog.consumer.ciscousers.connector.ldapUsername = cn=Directory Manager
#changeLog.consumer.ciscousers.connector.ldapPassword = Lakehart1
#changeLog.consumer.ciscousers.connector.ldapUrl = ldap://hart-a909.ccci.org:58389
#changeLog.consumer.ciscousers.connector.credsServiceWsdl = https://cas.ccci.org/password-services/creds?wsdl
#changeLog.consumer.ciscousers.connector.credServiceClientId = cas_tst
#changeLog.consumer.ciscousers.connector.credServiceClientKey = kF%^LV84c(n$9f8ggwxb,9lnY7tgd^

# =================================
# Delta Report

#customJob.ciscoDeltaReport.class = org.ccci.idm.grouperldappc.BasicDeltaReportTask
#customJob.ciscoDeltaReport.systemConnectorClass = org.ccci.idm.grouperldappc.CiscoLdapConnector
#customJob.ciscoDeltaReport.quartzCron = 0 0 1 * * ?
#customJob.ciscoDeltaReport.userRdnAttribName = cn
#customJob.ciscoDeltaReport.userBaseDn = ou=mpusers,dc=ccci,dc=org
#customJob.ciscoDeltaReport.groupId = ccci:itroles:uscore:ciscoconferencing:users
#customJob.ciscoDeltaReport.userObjectClass = Person
#customJob.ciscoDeltaReport.ldapUsername = cn=Directory Manager
#customJob.ciscoDeltaReport.ldapPassword = Lakehart1
#customJob.ciscoDeltaReport.ldapUrl = ldap://hart-a909.ccci.org:58389
#customJob.ciscoDeltaReport.reportRecipients = nathan.kopp@ccci.org
#customJob.ciscoDeltaReport.reportName = Cisco Grouper-LDAP Comparison Report Report
#customJob.ciscoDeltaReport.systemId = IdM Prod
#customJob.ciscoDeltaReport.reportSender = itm-prod@ccci.org



###################################
## XMPP notifications 
## (note, uncomment the consumer class and cron above)
## this will get grouper ws getMembers rest lite xmp: 
## http://anonsvn.internet2.edu/cgi-bin/viewvc.cgi/i2mi/trunk/grouper-ws/grouper-ws/doc/samples/getMembers/WsSampleGetMembersRestLite_xml.txt?view=log
###################################

## general xmpp configuration
xmpp.server.host = jabber.school.edu
xmpp.server.port = 5222
xmpp.user = username
# note, pass can be in an external file with morphstring
xmpp.pass = 
xmpp.resource = grouperServer

